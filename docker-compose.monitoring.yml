
services:
  postgres-dev:
    image: postgres:15
    restart: always
    volumes:
      - db_data_dev:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"

  hasura-dev:
    image: hasura/graphql-engine:v2.43.0
    ports:
      - "8080:8080"
    restart: always
    environment:
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "true"
      HASURA_GRAPHQL_ENABLED_APIS: "metadata,graphql,config,metrics"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_SECRET_DEV}
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres-dev:5432/postgres
    depends_on:
      - postgres-dev

  postgres-prod:
    image: postgres:15
    restart: always
    volumes:
      - db_data_prod:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"

  hasura-prod:
    image: hasura/graphql-engine:v2.43.0
    ports:
      - "8081:8080"
    restart: always
    environment:
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "true"
      HASURA_GRAPHQL_ENABLED_APIS: "metadata,graphql,config,metrics"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_SECRET_PROD}
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres-prod:5432/postgres
    depends_on:
      - postgres-prod

  prometheus:
    image: prom/prometheus:v2.39.1
    ports:
      - "9090:9090"
    volumes:
      - ./services/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/alert_rules.yml:/etc/prometheus/alert_rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    environment:
      HASURA_METRICS_SECRET_DEV: ${HASURA_METRICS_SECRET_DEV}
      HASURA_METRICS_SECRET_PROD: ${HASURA_METRICS_SECRET_PROD}
    depends_on:
      - hasura-dev
      - hasura-prod

  alert-manager:
    container_name: alert-manager
    image: prom/alertmanager:v0.25.0
    ports:
      - "9093:9093"
    volumes:
      - ./config/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alert-manager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    depends_on:
      - prometheus

  discord-alerts:
    container_name: discord-alerts
    image: benjojo/alertmanager-discord:latest
    environment:
      DISCORD_WEBHOOK: ${DISCORD_WEBHOOK_URL}
    depends_on:
      - alert-manager
    restart: always
    ports:
      - "9087:9087"

volumes:
  db_data_dev:
  db_data_prod:
  alert-manager-data: